{"version":3,"sources":["Header.js","TinderCards.js","SwipeButton.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","src","alt","TinderCards","useState","people","setPeople","useEffect","axios","get","then","res","console","log","data","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButton","fontSize","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAyBeA,MAnBf,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAYD,UAAU,mBAGxB,qBAAKE,IAAI,mEACPC,IAAI,GACJH,UAAU,iBAGZ,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAWD,UAAU,uB,kDC+BdI,MA7Cf,WAAwB,IAAD,EACOC,mBAAS,IADhB,mBACdC,EADc,KACNC,EADM,OAEqBF,mBAAS,IAF9B,mBAqBrB,OArBqB,UAIrBG,qBAAU,WACRC,IAAMC,IAAI,+DAA+DC,MAAK,SAAAC,GAC5EC,QAAQC,IAAIF,EAAIG,MAChBR,EAAUK,EAAIG,WAEhB,IAaA,qBAAKf,UAAU,4BAAf,SAEIM,EAAOU,KAAI,SAAAC,GAAM,OACf,cAAC,IAAD,CACEjB,UAAU,QAEVkB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAlBOC,EAkBaJ,EAAOK,UAjB5CT,QAAQC,IAAI,WAAaO,GADb,IAAYA,GAmBhBE,iBAAkB,kBAdVD,EAcyBL,EAAOK,UAbhDT,QAAQC,IAAIQ,EAAO,mBADJ,IAACA,GASV,SAOE,qBACEE,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAOS,OAAhB,MACxB1B,UAAU,OAFZ,SAIA,oBAAIA,UAAU,WAAd,SAA0BiB,EAAOK,UAT5BL,EAAOK,Y,2FCGTK,MA1Bf,WACE,OACE,sBAAK3B,UAAU,eAAf,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACE,cAAC,IAAD,CAAY4B,SAAS,YAGvB,cAAC3B,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACE,cAAC,IAAD,CAAW4B,SAAS,YAGtB,cAAC3B,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACE,cAAC,IAAD,CAAc4B,SAAS,YAGzB,cAAC3B,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACE,cAAC,IAAD,CAAe4B,SAAS,YAG1B,cAAC3B,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACE,cAAC,IAAD,CAAa4B,SAAS,gBCdfC,MAVf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCES8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1e1a257a.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Header.css\"\nimport PersonIcon from '@material-ui/icons/Person';\nimport IconButton from '@material-ui/core/IconButton'\nimport ForumIcon from '@material-ui/icons/Forum';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <IconButton>\n        <PersonIcon className=\"header__icon\" />\n      </IconButton>\n\n      <img src='https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png'\n        alt=\"\"\n        className=\"header__logo\"\n      />\n\n      <IconButton>\n        <ForumIcon className=\"header__icon\" />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport TinderCard from 'react-tinder-card'\nimport \"./TinderCard.css\"\nimport axios from 'axios'\n\nfunction TinderCards() {\n  const [people, setPeople] = useState([])\n  const [lastDirection, setLastDirection] = useState(\"\")\n\n  useEffect(() => {\n    axios.get('https://tinder-clone-backend-tes.herokuapp.com/tinder/cards').then(res => {\n      console.log(res.data)\n      setPeople(res.data)\n    })\n  },[])\n\n  const swipe = (direction, nameToDelete) => {\n    console.log(\"removing\" + nameToDelete);\n    // setLastDirection(direction)\n  }\n\n  const outFrame = (name) => {\n    console.log(name + \"left the screen\")\n  }\n\n\n  return (\n    <div className=\"tinderCard__cardContainer\">\n      {\n        people.map(person => (\n          <TinderCard\n            className=\"swipe\"\n            key={person.name}\n            preventSwipe={[\"up\", \"down\"]}\n            onSwipe={(dir) => swipe(dir, person.name)}\n            onCardLeftScreen={() => outFrame(person.name)}\n          >\n            <div\n              style={{ backgroundImage: `url(${person.imgUrl})` }}\n              className=\"card\"\n            >\n            <h3 className=\"card__h3\">{person.name}</h3>\n            </div>\n          </TinderCard>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default TinderCards\n","import React from 'react';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport FavouriteIcon from \"@material-ui/icons/Favorite\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport \"./SwipeButtons.css\"\n\nfunction SwipeButton() {\n  return (\n    <div className=\"swipeButtons\">\n      <IconButton className=\"swipeButtons__repeat\">\n        <ReplayIcon fontSize=\"large\" /> \n      </IconButton>\n\n      <IconButton className=\"swipeButtons__left\">\n        <CloseIcon fontSize=\"large\" /> \n      </IconButton>\n\n      <IconButton className=\"swipeButtons__star\">\n        <StarRateIcon fontSize=\"large\" /> \n      </IconButton>\n\n      <IconButton className=\"swipeButtons__right\">\n        <FavouriteIcon fontSize=\"large\" /> \n      </IconButton>\n\n      <IconButton className=\"swipeButtons__lightning\">\n        <FlashOnIcon fontSize=\"large\" /> \n      </IconButton>\n    </div>\n  )\n}\n\nexport default SwipeButton;\n","import './App.css';\nimport Header from './Header.js'\nimport TinderCards from './TinderCards'\nimport SwipeButtons from \"./SwipeButton\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TinderCards />\n      <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}